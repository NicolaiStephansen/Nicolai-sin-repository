Oppgave 1)
use context starter2024
fun nok_to_euro(nok):
  euro_exchange_rate = 0.089  
  nok * euro_exchange_rate
end


nok_to_euro(100)  

fun nok_to_usd(nok):
  usd_exchange_rate =0.092
  nok * usd_exchange_rate
end 
nok_to_usd(100)


fun nok_to_euro(nok):
  euro_exchange_rate = 0.089 
  nok * euro_exchange_rate
end
fun nok_to_usd(nok):
  usd_exchange_rate = 0.092  
  nok * usd_exchange_rate
end

fun nok_to_currency(nok, currency):
  if currency == "euro":
    nok_to_euro(nok)
  else if currency == "usd":
    nok_to_usd(nok)
  else:
    "Ugyldig valuta. Velg enten 'euro' eller 'usd'."
  end
Oppgave 2)
circle-red = circle(50,"outline", "red")
circle-yellow = circle(50, "outline", "yellow")
circle-black = circle(50, "outline" , "black")
circle-blue = circle(50, "outline" , "blue")
circle-green = circle(50, "outline" , "green")
circle-white = circle(50, "outline" ,  "white")

top-circle = beside(circle-blue, beside(circle-black, circle-red))
bottom-circle = beside(circle-yellow, circle-green)

background = empty-scene(400,200)
top-circle
scene-1 = put-image(top-circle, 200, 135, background)
put-image(bottom-circle, 200, 70, scene-1)

Monokromt olympisk flagg:
circle-red = circle(50,"outline", "black")
circle-yellow = circle(50, "outline", "black")
circle-black = circle(50, "outline" , "black")
circle-blue = circle(50, "outline" , "black")
circle-green = circle(50, "outline" , "black")
circle-white = circle(50, "outline" ,  "black")

top-circle = beside(circle-blue, beside(circle-black, circle-red))
bottom-circle = beside(circle-yellow, circle-green)

background = empty-scene(400,200)
top-circle
scene-1 = put-image(top-circle, 200, 135, background)
put-image(bottom-circle, 200, 70, scene-1)


Oppgave 3)
include shared-gdrive("dcic-2021", "1wyQZj_L0qqV9Ekgr9au6RX2iqt2Ga8Ep")

# Oppretter tabellen med persondata
minTabell = table: 
  firstName :: String, lastName :: String, email :: String, gender :: String, IP :: String, age :: Number
  row: "Christel", "Litherland", "clitherland0@msu.edu", "Non-binary", "168.192.122.105", 25
  row: "Veda", "Seiller", "vseiller1@php.net", "Non-binary", "22.64.141.244", 31
  row: "Adham", "Wynch", "awynch2@dailymotion.com", "Male", "199.126.171.185", 65
  row: "York", "Andover", "yandover3@ezinearticles.com", "Male", "234.146.76.74", 86
  row: "Benn", "Drawmer", "bdrawmer4@princeton.edu", "Male", "178.16.235.24", 45
  row: "Delila", "Tackes", "dtackes5@newsvine.com", "Female", "113.62.228.25", 22
  row: "Myrtia", "Eary", "meary6@businessweek.com", "Female", "151.141.133.11", 68
  row: "Veronika", "Berget", "vberget7@amazonaws.com", "Polygender", "252.198.173.108", 80
  row: "Rivi", "Locke", "rlocke8@exblog.jp", "Female", "109.75.212.166", 51
  row: "Aretha", "Marconi", "amarconi9@gov.uk", "Female", "232.95.177.135", 86
end 

# Funksjon for å filtrere personer mellom 30 og 80 år
fun filtrer-alder(table): 
  filter-with(table, lam(row): (row["age"] <= 80) and (row["age"] >= 30) end)
end



# Filtrere og lager ny kolonne
filtered-table = filtrer-alder(minTabell)
info-table = (filtered-table)
final-table = (info-table)

# Viser resultatet
display(final-table)
